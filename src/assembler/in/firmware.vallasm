fndef onTick:
	ret

fndef onDraw:
	load "program"
	invoke "len", 1, 1
	push ""
	pop "concated"
	push 0
for:      ; len, concated, i
	load "concated"
	swap
	push 1
	add
	swap 
	over 
	push "%02X" ; len, i+1, "", i+1, "%02X"
	swap ; len, i+1, "", "%02X", i+1
	load "program"
	swap ; len, i+1, "", "%02X", $"program", i+1
	invoke "string.byte", 2, 1 ; program:byte(i)
	invoke "string.format", 2, 1
	invoke "concat", 2, 1 ; len, i+1, concated
	pop "formated" ; len, i+1
	over ; length
	over ; length, index
	lt ; index < length
	jcr for ; 
	ret

fndef init:
	invoke "State", 0, 1
	store "state"
	push "P"
	invoke "rawget", 2, 1
	pop "program"
	ret